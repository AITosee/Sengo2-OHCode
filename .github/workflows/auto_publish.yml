name: Publish Release

on:
  workflow_dispatch:
  push:
    branches:
      - main

jobs:
  check-and-publish:
    runs-on: ubuntu-latest
    environment:
      name: Release Environment # 这个环境名称是可选的，用于组织您的工作环境
    steps:
      - name: Checkout code with submodules
        uses: actions/checkout@v3
        with:
          fetch-depth: 2 # Fetch the last 2 commits to compare
          submodules: true # Checkout submodules

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '14' # or any other version you need

      - name: Get previous and current package.json contents
        id: package_json
        run: |
          PREVIOUS_COMMIT=$(git rev-parse HEAD~1)
          CURRENT_COMMIT=$(git rev-parse HEAD)
          PREVIOUS_PACKAGE_JSON=v$(git show "$PREVIOUS_COMMIT:package.json" | jq -r .version)
          CURRENT_PACKAGE_JSON=v$(jq -r .version package.json)
          PACKAGE_NAME_JSON=$(jq -r .name package.json)
          
          echo "PREVIOUS_VERSION=$PREVIOUS_PACKAGE_JSON" >> $GITHUB_ENV
          echo "CURRENT_VERSION=$CURRENT_PACKAGE_JSON" >> $GITHUB_ENV
          echo "PACKAGE_NAME=$PACKAGE_NAME_JSON" >> $GITHUB_ENV
          
          tree
          
      - name: Check if version changed
        id: version_changed
        run: |
          if [ "$PREVIOUS_VERSION" != "$CURRENT_VERSION" ]; then
            echo "VERSION_CHANGED=true" >> $GITHUB_ENV
          else
            echo "VERSION_CHANGED=false" >> $GITHUB_ENV
          fi
          
      - name: Build package
        run: |
          npm install
          npm run build:prod
          cd dist 
          tree
          cp -rv ${PACKAGE_NAME}.zip ${GITHUB_WORKSPACE}
          rm -rf ./*
          
      - name: Create Release and Upload Release Asset
        if: env.VERSION_CHANGED == 'true'
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ env.CURRENT_VERSION }}
          name: ${{ env.CURRENT_VERSION }}
          body: |
            Automatic release triggered by version change.
          draft: false
          prerelease: false
          files: |
           ${{ env.PACKAGE_NAME }}.zip


          
